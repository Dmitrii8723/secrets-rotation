# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
# version: 2.1

# # Define a job to be invoked later in a workflow.
# # See: https://circleci.com/docs/configuration-reference/#jobs
# jobs:
#   say-hello:
#     # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
#     # See: https://circleci.com/docs/configuration-reference/#executor-job
#     docker:
#       - image: cimg/base:stable
#     # Add steps to the job
#     # See: https://circleci.com/docs/configuration-reference/#steps
#     steps:
#       - checkout
#       - run:
#           name: "Say hello"
#           command: "echo Hello, World!"

# # Orchestrate jobs using workflows
# # See: https://circleci.com/docs/configuration-reference/#workflows
# workflows:
#   say-hello-workflow:
#     jobs:
#       - say-hello

version: 2.1
jobs:
  build:
    docker:
      - image: cimg/base:stable

    steps:
      - checkout

      # Install AWS CLI
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get update && sudo apt-get install -y awscli

      # Set AWS credentials as environment variables
      - run:
          name: Set AWS credentials
          command: |
            echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $BASH_ENV
            echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $BASH_ENV
            echo "AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION" >> $BASH_ENV

     # Set secret ARN as an environment variable
      - run:
          name: Set secret ARN
          command: |
            echo "SECRET_ARN=$SECRET_ARN" >> $BASH_ENV

      Retrieve secret value from Secrets Manager
      - run:
          name: Retrieve secret value
          command: |
            export SECRET_VALUE=$(aws secretsmanager get-secret-value --secret-id $SECRET_ARN --query SecretString --output text)

      # Extract password from secret value
      - run:
          name: Extract password
          command: |
            export DB_PASSWORD=$(echo $SECRET_VALUE | jq -r '.password')

      # Set the password as an environment variable
      - run:
          name: Set environment variable
          command: |
            echo "DB_PASSWORD=$DB_PASSWORD" >> $BASH_ENV

      # Use the environment variable in the database connection configuration
      # - run:
      #     name: Run database migration
      #     command: |
      #       # Use $DB_PASSWORD in your database migration command
      #       # ...



      
